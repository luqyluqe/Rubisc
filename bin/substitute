#!/usr/bin/ruby

require File.join(File.dirname(__FILE__), '..', 'lib','fileutil')

unless ARGV[0] and ARGV[1] and ARGV[2]
    puts "Usage: substitute <path> <old_content_regex> <new_content>"
    puts "Example: substitute mydir/ hello hey"
    exit
end
unless File.exist? ARGV[0]
    puts "#{ARGV[0]} does not exist."
    puts "Please provide the path to the file or directory you want to manipulate."
    exit
end

path=ARGV[0]
@old_content=ARGV[1]
@new_content=ARGV[2]

def file_substitute file_path
	success=Rubisc::FileUtil::process_file(file_path) do |content|
		pattern=content.match /#{@old_content}/
		if !pattern
			puts "No matching found."
		end
		content=content.gsub /#{@old_content}/,@new_content
	end
	if !success
		puts 'Failed to process file '+file_path+'.'
	end
end

def dir_substitute path
	if path!="." and path!=".."
		if File.directory?(path)
			Dir.entries(path).each do |sub|
				if sub!="." and sub!=".."
					dir_substitute "#{path}/#{sub}"
				end
			end
		else
			file_substitute path
		end
	end
end

dir_substitute path
